name: 'Eco CI Activity Checker'
description: 'check if there has been a commit in the specificed repo/branch within the specified time period and write to github output'
inputs:
  repo:
    description: 'format: {repo-owner}/{repo-name}'
    required: true
  branch:
    description: 'the branch to check'
    required: true
  time-unit:
    description: 'The unit of time you are looking back for, i.e. day,week, hour, etc.'
    required: false
    default: 'day'
  time-value:
    description: 'How far back you are looking'
    required: false
    default: '1'
  workflow-id:
    description: 'the id of the workflow. if this is passed, it will also check if this has been run in the <time period>'
    required: false
outputs:
  recent_commit:
    description: 'Returns true if there was a commit within the specified <time-period>, false if there was not'
    value: ${{ steps.check_commits.outputs.recent_commit }}
  recent_workflow_run:
    description: 'Returns true if the specified workflow-id has been succesfully run in the last <time-period>'
    value: ${{ steps.check_commits.outputs.recent_workflow_run }}
runs:
  using: 'composite'
  steps:
    - id: check_commits
      continue-on-error: true
      name: check if there was a commit in the last time period
      shell: bash
      run: |
        dateofcommit=$(curl -s https://api.github.com/repos/${{ inputs.repo }}/commits/${{ inputs.branch }} | jq -r '.commit.author.date')
        commit_timestamp=$(date --date "$dateofcommit" +'%s')
        time_ago=$(date --date '${{ inputs.time-value }} ${{ inputs.time-unit }} ago' +'%s')
        [ $commit_timestamp -gt $time_ago ] && echo "recent_commit=true" >> $GITHUB_OUTPUT
    
    - id: check_workflow
      if: inputs.workflow-id != ''
      name: check if workflow had a run in the last time period
      shell: bash
      run: |
        api_response=$(curl -s https://api.github.com/repos/${{ inputs.repo }}/actions/workflows/${{ inputs.workflow-id }}/runs)
#        dateoflastrun=$($api_response | jq -r '.["workflow_runs"][0]["run_started_at"]')
#        state=$($api_response | jq -r '.["workflow_runs"][0]["conclusion"]')        
#        lastrun_timestamp=$(date --date "$dateoflastrun" +'%s')
#        time_ago=$(date --date '${{ inputs.time-value }} ${{ inputs.time-unit }} ago' +'%s')
#        [ $lastrun_timestamp -gt $time_ago ] && [ $state == 'success' ] && echo "recent_workflow_run=true" >> $GITHUB_OUTPUT
